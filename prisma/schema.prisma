// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(cuid())
  name        String
  email       String @unique
  imageUrl    String?
  articles    Article[]
  comments    Comment[]
  like        Like[]
}

model Article{
  id          String   @id @default(cuid())
  title       String
  content     String
  category    String
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  author      User @relation(fields: [authorId] , references: [id] , onDelete: Cascade)
  authorId    String
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id       String @id @default(cuid())
  content  String

  userId   String
  user     User @relation(fields: [userId] , references: [id],onDelete: Cascade)

  articleId  String
  article Article @relation(fields: [articleId], references: [id])

  createdAt  DateTime  @default(now())
}

model Like {
  id   String @id @default(cuid())
  userId  String
  user    User @relation(fields: [userId] , references: [id])

  articleId  String
  article Article @relation(fields: [articleId], references: [id])

  createdAt  DateTime  @default(now())

  @@unique([userId , articleId])
}